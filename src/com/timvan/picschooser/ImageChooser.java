package src.com.timvan.picschooser;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;

/**
 * @author TimVan
 * @date 2018/5/29 18:06
 */
public class ImageChooser extends JFrame {
    public JPanel panel;
    public JPanel imageBrowser;
    public JPanel operatePanel;
    public JLabel imageInfo;
    public JButton okButton;


    public ImageChooser() {

    }

    private void createUIComponents() {
        // TODO: place custom component creation code here


    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new BorderLayout(0, 0));
        imageBrowser = new JPanel();
        imageBrowser.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        imageBrowser.setBackground(new Color(-6118235));
        imageBrowser.setOpaque(true);
        imageBrowser.setPreferredSize(new Dimension(24, 80));
        panel.add(imageBrowser, BorderLayout.CENTER);
        operatePanel = new JPanel();
        operatePanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        operatePanel.setBackground(new Color(-16747063));
        operatePanel.setMinimumSize(new Dimension(50, 80));
        operatePanel.setPreferredSize(new Dimension(24, 80));
        panel.add(operatePanel, BorderLayout.SOUTH);
        imageInfo = new JLabel();
        Font imageInfoFont = this.$$$getFont$$$(null, -1, 20, imageInfo.getFont());
        if (imageInfoFont != null) imageInfo.setFont(imageInfoFont);
        imageInfo.setForeground(new Color(-3877926));
        imageInfo.setName("imageInfo");
        imageInfo.setText("表情包信息");
        operatePanel.add(imageInfo, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 6, false));
        okButton = new JButton();
        okButton.setAlignmentX(1.0f);
        okButton.setBackground(new Color(-16733578));
        okButton.setDoubleBuffered(false);
        Font okButtonFont = this.$$$getFont$$$(null, Font.BOLD, 28, okButton.getFont());
        if (okButtonFont != null) okButton.setFont(okButtonFont);
        okButton.setForeground(new Color(-65553));
        okButton.setHorizontalAlignment(0);
        okButton.setMargin(new Insets(2, 14, 2, 14));
        okButton.setOpaque(true);
        okButton.setSelected(false);
        okButton.setText("确   定");
        operatePanel.add(okButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(240, 60), new Dimension(240, 60), new Dimension(-1, 100), 21, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
